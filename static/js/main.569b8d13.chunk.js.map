{"version":3,"sources":["reducers/gridReducer.js","reducers/talkyBlockyReducer.js","helpers/dictionary.js","StateContext.js","components/GridBlock.js","components/Grid.js","components/TalkyBlocky.js","components/Display.js","App/App.js","serviceWorker.js","index.js"],"names":["gridWidth","Math","floor","window","innerWidth","gridHeight","innerHeight","gridRGBs","gridReducer","grid","action","type","widthIndex","gridColumn","heightIndex","blockSize","width","height","RGBs","position","rgb","talkyBlockyReducer","talkyBlocky","size","initialOffset","left","top","gridPos","direction","directions","up","down","right","rights","write","nonCommands","hello","thanks","colors","cornsilk","almond","bisque","navajowhite","wheat","burlywood","cerulean","tan","rosybrown","sandybrown","goldenrod","chocolate","saddlebrown","sienna","brown","maroon","powderblue","skyblue","deepskyblue","dodgerblue","cornflowerblue","steelblue","royalblue","blue","mediumblue","navy","midnightbllue","mediumslateblue","slateblue","gainsboro","silver","gray","dimgray","slategray","black","lawngreen","chartreuse","limegreen","lime","forestgreen","green","greenyello","yellowgreen","springgreen","mediumspringgreen","palegreen","mediumseagree","seagreen","olive","olivedrab","cyan","aqua","aquamarine","turquoise","cadetblue","teal","cora","tomato","orangered","gold","orange","pink","hotpink","deeppink","palevioletred","mediumvioletre","salmon","indianred","crimson","firebrick","red","lavender","thistle","plum","violet","orchid","fuchsia","magenta","mediumpurple","blueviolet","purple","indigo","white","snow","honeydew","mint","azure","aliceblue","ghostwhite","smoke","seashell","beige","lace","floralwhite","ivory","antiquewhite","linen","lavenderblush","rose","lemon","papaya","moccasin","peach","palegoldenrod","khaki","yellow","StateContext","createContext","StateContextProvider","props","recognition","synth","talkyBlockyVoice","useState","buildStage","setBuildStage","keywords","setKeyWords","talkyIsTalking","setTalkyIsTalking","talkyBackground","setTalkyBackground","useReducer","dispatchGrid","dispatchTalkyBlocky","dictionary","keywordsIndex","speechHandler","e","results","isFinal","words","transcript","toLowerCase","split","console","log","recognizedWords","filter","word","includes","push","length","newKeywords","slice","talkyBlockySpeak","forEach","keyword","index","setTimeout","hasOwnProperty","Date","now","processNewKeywords","talkyStartsListening","talkyStopsListening","continuouslyTranscribe","start","speech","probability","random","utterThis","SpeechSynthesisUtterance","voice","pitch","rate","speak","addEventListener","talkyStopsTalking","startTutorial","keyCode","spaceBarDownHandler","sound","Audio","src","volume","play","spaceBarUpHandler","removeEventListener","stop","document","once","Object","keys","useEffect","webkitSpeechRecognition","continuous","lang","interimResults","maxAlternatives","speechSynthesis","getVoices","name","grammar","join","speechRecognitionList","webkitSpeechGrammarList","addFromString","grammars","alert","Provider","value","children","GridBlock","styled","div","css","color","Grid","GridContainer","gridRows","GridRowContainer","blockKey","gridRowKey","gridRowBlocks","key","talkingAnimation","keyframes","TalkyBlocky","Display","useContext","App","className","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.569b8d13.chunk.js","sourcesContent":["const gridBlockSize = 100;\nconst gridWidth = Math.floor(window.innerWidth / gridBlockSize);\nconst gridHeight = Math.floor(window.innerHeight / gridBlockSize);\nconst gridRGBs = [];\n\nexport default function gridReducer(grid, action) {\n  switch (action.type) {\n    case \"BUILD_GRID\":\n      for (let widthIndex = 0; widthIndex < gridWidth; widthIndex++) {\n        const gridColumn = [];\n        for (let heightIndex = 0; heightIndex < gridHeight; heightIndex++) {\n          gridColumn[heightIndex] = \"255, 255, 255\";\n        }\n        gridRGBs[widthIndex] = gridColumn;\n      }\n\n      return {\n        blockSize: gridBlockSize,\n        width: gridWidth,\n        height: gridHeight,\n        RGBs: gridRGBs\n      };\n\n    case \"CHANGE_GRID_BLOCK_COLOR\":\n      grid.RGBs[action.position[0]][action.position[1]] = action.rgb;\n\n      return grid;\n  }\n}\n","export default function talkyBlockyReducer(talkyBlocky, action) {\n  switch(action.type) {\n    case \"BUILD_TALKY_BLOCKY\":\n      const size = (action.grid.blockSize - (action.grid.blockSize / 4))\n      const initialOffset = Math.floor((action.grid.blockSize / 20) + (action.grid.blockSize / 2) - (size / 2));\n      return {\n        size: size,\n        left: initialOffset,\n        top: initialOffset,\n        gridPos: [0, 0]\n      }     \n\n    case \"MOVE_TALKY_BLOCKY\":\n      if (action.direction === \"left\") {\n        if (talkyBlocky.gridPos[0] > 0) {\n          talkyBlocky.left -= 100;\n          talkyBlocky.gridPos[0] -= 1;\n        }\n      }\n      else if (action.direction === \"right\") {\n        if (talkyBlocky.gridPos[0] < action.grid.width - 1) {\n          talkyBlocky.left += 100;\n          talkyBlocky.gridPos[0] += 1;\n        }\n      }\n      else if (action.direction === \"down\") {\n        if (talkyBlocky.gridPos[1] < action.grid.height - 1) {\n          talkyBlocky.top += 100;\n          talkyBlocky.gridPos[1] += 1;\n        }\n      }\n      else if (action.direction === \"up\" ) {\n        if (talkyBlocky.gridPos[1] > 0) {\n          talkyBlocky.top -= 100;\n          talkyBlocky.gridPos[1] -= 1;\n        }\n      }\n      return talkyBlocky;\n  }\n}","export const directions = {\n  up: \"up\",\n  down: \"down\",\n  left: \"left\",\n  right: \"right\",\n  rights: \"right\",\n  write: \"right\"\n};\n\nexport const nonCommands = {\n  hello: [\"Hi! How's it going?\", \"Yo!\", \"Hey there.\"],\n  thanks: [\n    \"your welcome, easy fix\",\n    \"no sweat, easy fix\",\n    \"piece of cake\",\n    \"It's not like I have a choice\"\n  ]\n};\n\nexport const colors = {\n  cornsilk: \"255,248,220\",\n  almond: \"255,235,205\",\n  bisque: \"255,228,196\",\n  navajowhite: \"255,222,173\",\n  wheat: \"245,222,179\",\n  burlywood: \"222,184,135\",\n  cerulean: \"42, 82, 190\",\n  tan: \"210,180,140\",\n  rosybrown: \"188,143,143\",\n  sandybrown: \"244,164,96\",\n  goldenrod: \"218,165,32\",\n  chocolate: \"210,105,30\",\n  saddlebrown: \"139,69,19\",\n  sienna: \"160,82,45\",\n  brown: \"165,42,42\",\n  maroon: \"128,0,0\",\n  powderblue: \"176,224,230\",\n  //lightblue: \"173,216,230\",\n  //lightskyblue: \"135,206,250\",\n  skyblue: \"135,206,235\",\n  deepskyblue: \"0,191,255\",\n  //lightsteelblue: \"176,196,222\",\n  dodgerblue: \"30,144,255\",\n  cornflowerblue: \"100,149,237\",\n  steelblue: \"70,130,180\",\n  royalblue: \"65,105,225\",\n  blue: \"0,0,255\",\n  mediumblue: \"0,0,205\",\n  //darkblue: \"0,0,139\",\n  navy: \"0,0,128\",\n  midnightbllue: \"25,25,112\",\n  mediumslateblue: \"123,104,238\",\n  slateblue: \"106,90,205\",\n  //darkslateblue: \"72,61,139\",\n  gainsboro: \"220,220,220\",\n  //lightgray: \"211,211,211\",\n  silver: \"192,192,192\",\n  //darkgray: \"169,169,169\",\n  gray: \"128,128,128\",\n  dimgray: \"105,105,105\",\n  //lightslategray: \"119,136,153\",\n  slategray: \"112,128,144\",\n  //darkslategray: \"47,79,79\",\n  black: \"0,0,0\",\n  lawngreen: \"124,252,0\",\n  chartreuse: \"127,255,0\",\n  limegreen: \"50,205,50\",\n  lime: \"0,255,0\",\n  forestgreen: \"34,139,34\",\n  green: \"0,128,0\",\n  //darkgreen: \"0,100,0\",\n  greenyello: \"173,255,47\",\n  yellowgreen: \"154,205,50\",\n  springgreen: \"0,255,127\",\n  mediumspringgreen: \"0,250,154\",\n  //lightgreen: \"144,238,144\",\n  palegreen: \"152,251,152\",\n  //darkseagreen: \"143,188,143\",\n  mediumseagree: \"60,179,113\",\n  seagreen: \"46,139,87\",\n  olive: \"128,128,0\",\n  //darkolivegreen: \"85,107,47\",\n  olivedrab: \"107,142,35\",\n  //lightcyan: \"224,255,255\",\n  cyan: \"0,255,255\",\n  aqua: \"0,255,255\",\n  aquamarine: \"127,255,212\",\n  turquoise: \"64,224,208\",\n  //darkturquoise: \"0,206,209\",\n  //lightseagree: \"32,178,170\",\n  cadetblue: \"95,158,160\",\n  //darkcyan: \"0,139,139\",\n  teal: \"0,128,128\",\n  cora: \"255,127,80\",\n  tomato: \"255,99,71\",\n  orangered: \"255,69,0\",\n  gold: \"255,215,0\",\n  orange: \"255,165,0\",\n  //darkorange: \"255,140,0\",\n  pink: \"255,192,203\",\n  //lightpink: \"255,182,193\",\n  hotpink: \"255,105,180\",\n  deeppink: \"255,20,147\",\n  palevioletred: \"219,112,147\",\n  mediumvioletre: \"199,21,133\",\n  //lightsalmon: \"255,160,122\",\n  salmon: \"250,128,114\",\n  //darksalmon: \"233,150,122\",\n  //lightcoral: \"240,128,128\",\n  indianred: \"205,92,92\",\n  crimson: \"220,20,60\",\n  firebrick: \"178,34,34\",\n  red: \"255,0,0\",\n  //darkred: \"139,0,0\",\n  lavender: \"230,230,250\",\n  thistle: \"216,191,216\",\n  plum: \"221,160,221\",\n  violet: \"238,130,238\",\n  orchid: \"218,112,214\",\n  fuchsia: \"255,0,255\",\n  magenta: \"255,0,255\",\n  // orchid: \"186,85,211\",\n  mediumpurple: \"147,112,219\",\n  blueviolet: \"138,43,226\",\n  //darkviolet: \"148,0,211\",\n  //darkorchid: \"153,50,204\",\n  //darkmagenta: \"139,0,139\",\n  purple: \"128,0,128\",\n  indigo: \"75,0,130\",\n  white: \"255,255,255\",\n  snow: \"255,250,250\",\n  honeydew: \"240,255,240\",\n  mint: \"245,255,250\",\n  azure: \"240,255,255\",\n  aliceblue: \"240,248,255\",\n  ghostwhite: \"248,248,255\",\n  smoke: \"245,245,245\",\n  seashell: \"255,245,238\",\n  beige: \"245,245,220\",\n  lace: \"253,245,230\",\n  floralwhite: \"255,250,240\",\n  ivory: \"255,255,240\",\n  antiquewhite: \"250,235,215\",\n  linen: \"250,240,230\",\n  lavenderblush: \"255,240,245\",\n  rose: \"255,228,225\",\n  //lightyellow: \"255,255,224\",\n  lemon: \"255,250,205\",\n  //lightgoldenrodyellow: \"250,250,210\",\n  papaya: \"255,239,213\",\n  moccasin: \"255,228,181\",\n  peach: \"255,218,185\",\n  palegoldenrod: \"238,232,170\",\n  khaki: \"240,230,140\",\n  //darkkhaki: \"189,183,107\",\n  yellow: \"255,255,0\"\n};\n","// IMPORTS ////////////////////////////////////////////////////////////////////////////////////////////////\nimport React, { createContext, useEffect, useReducer, useState } from \"react\";\n\n// Import Reducers\nimport gridReducer from \"./reducers/gridReducer\";\nimport talkyBlockyReducer from \"./reducers/talkyBlockyReducer\";\n\n// Import helper functions\nimport { directions, colors, nonCommands } from \"./helpers/dictionary\";\n\n// CREATE CONTEXT ////////////////////////////////////////////////////////////////////////////////////\nconst StateContext = createContext();\n\nfunction StateContextProvider(props) {\n  // STATE //////////////////////////////////////////////////////////////////////////////////////////\n  const [buildStage, setBuildStage] = useState(0);\n  const [keywords, setKeyWords] = useState([]);\n  const [talkyIsTalking, setTalkyIsTalking] = useState(false);\n  const [talkyBackground, setTalkyBackground] = useState(false);\n\n  const [grid, dispatchGrid] = useReducer(gridReducer, {});\n  const [talkyBlocky, dispatchTalkyBlocky] = useReducer(talkyBlockyReducer, {});\n\n  // SPEECH RECOGNITION //////////////////////////////////////////////////////////////////////\n  const dictionary = [];\n  let keywordsIndex = 0;\n  let recognition, synth, talkyBlockyVoice;\n\n  dictionary.push(...Object.keys(colors));\n  dictionary.push(...Object.keys(directions));\n  dictionary.push(...Object.keys(nonCommands));\n\n  // SPEECH RECOGNITION //////////////////////////////////////////////////////////////////////\n  function speechHandler(e) {\n    if (e.results[0].isFinal) {\n      const words = e.results[0][0].transcript.toLowerCase().split(\" \");\n      console.log(words);\n      const recognizedWords = words.filter(word => dictionary.includes(word));\n\n      keywords.push(...recognizedWords);\n      setKeyWords(keywords);\n      processNewKeywords();\n    }\n  }\n\n  function processNewKeywords() {\n    // see if there are new keywords to\n    if (keywordsIndex !== keywords.length) {\n      const newKeywords = keywords.slice(keywordsIndex, keywords.length);\n\n      if (newKeywords.length > 8) {\n        talkyBlockySpeak(\n          \"You're lucky I'm a computer, because I would forget all of that otherwise.\"\n        );\n      }\n\n      newKeywords.forEach((keyword, index) => {\n        console.log(keyword);\n\n        setTimeout(\n          keyword => {\n            if (directions.hasOwnProperty(keyword)) {\n              dispatchTalkyBlocky({\n                type: \"MOVE_TALKY_BLOCKY\",\n                grid: grid,\n                direction: directions[keyword]\n              });\n\n              setTalkyBackground(`wt${keyword}.png`);\n\n              if (newKeywords.length <= 8) {\n                talkyBlockySpeak([\"Walk walk walk\", \"\"], 0.25);\n              }\n            } else if (colors.hasOwnProperty(keyword)) {\n              dispatchGrid({\n                type: \"CHANGE_GRID_BLOCK_COLOR\",\n                position: [talkyBlocky.gridPos[0], talkyBlocky.gridPos[1]],\n                rgb: colors[keyword]\n              });\n\n              if (newKeywords.length <= 8) {\n                talkyBlockySpeak(\n                  [`Poof. It's ${keyword}`, `Voila.`, `${keyword} it is.`],\n                  0.25\n                );\n              }\n            } else if (nonCommands.hasOwnProperty(keyword)) {\n              talkyBlockySpeak(nonCommands[keyword]);\n            }\n\n            setBuildStage(Date.now());\n          },\n          index * 350,\n          keyword\n        );\n\n        setTimeout(() => {\n          setTalkyBackground(`wtDefault.png`);\n        }, (newKeywords.length + 1) * 350);\n      });\n\n      keywordsIndex = keywords.length;\n    }\n  }\n\n  function talkyStartsListening() {\n    setTalkyBackground(\"wtListening.png\");\n  }\n\n  function talkyStopsListening() {\n    setTalkyBackground(false);\n  }\n\n  // Some hacky shit to actually get the API to not stop when the speaker pauses.\n  function continuouslyTranscribe() {\n    recognition.start();\n  }\n\n  // SPEECH SYNTHESIS //////////////////////////////////////////////////////////////////////\n  function talkyBlockySpeak(speech, probability = 1) {\n    if (Math.random() < probability) {\n      // see if multiple responses are possible\n      if (typeof speech === \"object\") {\n        speech = speech[Math.floor(Math.random() * speech.length)];\n      }\n\n      const utterThis = new SpeechSynthesisUtterance(speech);\n      utterThis.voice = talkyBlockyVoice;\n      utterThis.pitch = 1.5;\n      utterThis.rate = 0.75;\n      synth.speak(utterThis);\n      setTalkyIsTalking(true);\n      utterThis.addEventListener(\"end\", talkyStopsTalking);\n    }\n  }\n\n  function startTutorial(e) {\n    if (e.keyCode === 116) {\n      // 'T'\n      // talkyBlockyVoice.rate = 2\n      talkyBlockySpeak(\n        \"Hi. I'm Talky Blocky! Hold down the spacebar to talk to me.\"\n      );\n      talkyBlockySpeak(\n        \"If you say right, left, down or up I can move around the grid.\"\n      );\n      talkyBlockySpeak(\n        \"Say the name of any color and I can change the grid blocks to that color!\"\n      );\n      talkyBlockySpeak(\"You can also say hello and thanks.\");\n      talkyBlockySpeak(\"Please speak clearly so that I can understand you.\");\n      talkyBlockySpeak(\"Press 'T' to hear the tutorial again.\");\n    }\n  }\n\n  function talkyStopsTalking() {\n    setTalkyIsTalking(false);\n  }\n\n  // KEY EVENTS //////////////////////////////////////////////////////////////////////////////\n  function spaceBarDownHandler(e) {\n    if (e.keyCode === 32) {\n      try {\n        const sound = new Audio();\n        sound.src = \"./assets/sounds/listenSound.wav\";\n        sound.volume = 0.015;\n        sound.play();\n\n        recognition.start();\n        recognition.addEventListener(\"end\", continuouslyTranscribe);\n      } catch {\n        // recognition already started\n      }\n    }\n  }\n\n  function spaceBarUpHandler(e) {\n    if (e.keyCode === 32) {\n      const sound = new Audio();\n      sound.src = \"./assets/sounds/executeSound.wav\";\n      sound.volume = 0.015;\n      sound.play();\n\n      recognition.removeEventListener(\"end\", continuouslyTranscribe);\n      recognition.stop();\n      document.addEventListener(\"keydown\", spaceBarDownHandler, { once: true });\n    }\n  }\n\n  // Initialize //////////////////////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    if (buildStage === 0) {\n      dispatchGrid({ type: \"BUILD_GRID\" });\n      setBuildStage(1);\n    } else if (buildStage === 1) {\n      dispatchTalkyBlocky({ type: \"BUILD_TALKY_BLOCKY\", grid: grid });\n      setBuildStage(2);\n    } else if (buildStage === 2) {\n      document.addEventListener(\"keydown\", spaceBarDownHandler, { once: true });\n      document.addEventListener(\"keyup\", spaceBarUpHandler);\n      document.addEventListener(\"keypress\", startTutorial);\n\n      // initializing the speech recognition API\n      recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.lang = \"en-US\";\n      recognition.interimResults = true;\n      recognition.maxAlternatives = 1;\n\n      recognition.addEventListener(\"result\", speechHandler);\n      recognition.addEventListener(\"audiostart\", talkyStartsListening);\n      recognition.addEventListener(\"audioend\", talkyStopsListening);\n\n      // initializing the speech synthesis API\n      synth = window.speechSynthesis;\n\n      synth.addEventListener(\"voiceschanged\", () => {\n        const voices = synth.getVoices();\n        voices.forEach(voice => {\n          if (voice.name === \"Google US English\" && !talkyBlockyVoice) {\n            talkyBlockyVoice = voice;\n          }\n        });\n      });\n\n      // adding grammar so talky blocky understands certain words more clearly than others\n      const grammar = `#JSGF V1.0; grammar talkyblockyDictionary;  public <word> = ${dictionary.join(\n        \" | \"\n      )};`;\n\n      const speechRecognitionList = new window.webkitSpeechGrammarList();\n      speechRecognitionList.addFromString(grammar, 1);\n      recognition.grammars = speechRecognitionList;\n\n      setBuildStage(3);\n    } else if (buildStage === 3) {\n      alert(\n        \"Hi. I'm Talky Blocky! Hold down the spacebar to talk to me. If you say right, left, down or up I can move around the grid. Say the name of any color and I can change the grid blocks to that color! You can also say hello and thanks. Please speak clearly so that I can understand you. Press 'T' to hear me speak this to you.\"\n      );\n      setBuildStage(4);\n    }\n  }, [buildStage]);\n\n  // PROVIDE CONTEXT //////////////////////////////////////////////////////////////////////////////\n  return (\n    <StateContext.Provider\n      value={{ grid, talkyBlocky, talkyIsTalking, talkyBackground }}\n    >\n      {props.children}\n    </StateContext.Provider>\n  );\n}\n\n// EXPORTS ///////////////////////////////////////////////////////////////////////////////////////\nexport default StateContext;\nexport { StateContextProvider };\n","import styled, { css } from \"styled-components\";\n\nconst GridBlock = styled.div`\n  ${props =>\n    props.size &&\n    css`\n      width: ${props.size - Math.floor(props.size / 10)}px;\n      height: ${props.size - Math.floor(props.size / 10)}px;\n      border: ${Math.floor(props.size / 20)}px solid black;\n    `};\n  ${props =>\n    props.color &&\n    css`\n      background-color: rgb(${props.color});\n    `};\n`;\n\nexport default GridBlock;\n","// IMPORTS /////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport GridBlock from \"./GridBlock\";\n\nexport default function Grid(props) {\n  const grid = props.grid;\n\n  const GridContainer = styled.div`\n    position: absolute;\n    left: 0px;\n    top 0px;\n    border: 5px solid white;\n    display: inline-block;\n  `;\n  const gridRows = [];\n\n  const GridRowContainer = styled.div`\n    display: flex;\n  `;\n\n  let blockKey = 0;\n  let gridRowKey = 0;\n\n  for (\n    let heightIndex = 0;\n    heightIndex < grid.height;\n    heightIndex++, gridRowKey++\n  ) {\n    const gridRowBlocks = [];\n    for (\n      let widthIndex = 0;\n      widthIndex < grid.width;\n      widthIndex++, blockKey++\n    ) {\n      gridRowBlocks[widthIndex] = (\n        <GridBlock\n          key={blockKey}\n          size={grid.blockSize}\n          color={grid.RGBs[widthIndex][heightIndex]}\n        />\n      );\n    }\n    gridRows[heightIndex] = (\n      <GridRowContainer key={gridRowKey}>{gridRowBlocks}</GridRowContainer>\n    );\n  }\n\n  return <GridContainer>{gridRows}</GridContainer>;\n}\n","import styled, { css, keyframes } from \"styled-components\";\n\nconst talkingAnimation = keyframes`\n 0% { filter: brightness(1); }  \n 50% { filter: brightness(1.5); }\n 100% { filter: brightness(1); }\n `;\n\nconst TalkyBlocky = styled.div`\n  position: absolute;\n  background-repeat: none;\n  transition: left 350ms, top 350ms;\n\n  ${props =>\n    props.talkyBlocky &&\n    css`\n      left: ${props.talkyBlocky.left}px;\n      top: ${props.talkyBlocky.top}px;\n      width: ${props.talkyBlocky.size}px;\n      height: ${props.talkyBlocky.size}px;\n      animation-name: ${props.talkyIsTalking ? talkingAnimation : \"\"};\n      animation-duration: 300ms;\n      animation-iteration-count: infinite;\n      background-image: ${props.talkyBackground\n        ? `url(./assets/images/walkie-talkie/${props.talkyBackground})`\n        : \"url(./assets/images/walkie-talkie/wtDefault.png)\"};\n    `}\n`;\n\nexport default TalkyBlocky;\n","import React, { useEffect, useContext } from \"react\";\n\nimport StateContext from \"../StateContext\";\n\n// Import Components\nimport Grid from \"./Grid\";\nimport TalkyBlocky from \"./TalkyBlocky\";\n\nexport default function Display() {\n  const { talkyBlocky, grid, talkyIsTalking, talkyBackground } = useContext(\n    StateContext\n  );\n  return (\n    <div>\n      <Grid grid={grid} />\n      <TalkyBlocky\n        talkyBlocky={talkyBlocky}\n        talkyIsTalking={talkyIsTalking}\n        talkyBackground={talkyBackground}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\n\nimport {StateContextProvider} from '../StateContext'\nimport Display from '../components/Display';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <StateContextProvider>\n        <Display />\n      </StateContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}